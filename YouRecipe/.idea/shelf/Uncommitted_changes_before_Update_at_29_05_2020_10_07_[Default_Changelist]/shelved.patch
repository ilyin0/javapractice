Index: src/main/java/by/bsu/ilyin/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package by.bsu.ilyin;\r\n\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\n\r\n@SpringBootApplication\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n//        UI ui = new ConsoleUI();\r\n//        ui.start();\r\n        SpringApplication.run(Main.class, args);\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/by/bsu/ilyin/Main.java	(revision df8503108d3daf8b1aac4db4ff6163e25dfbfaee)
+++ src/main/java/by/bsu/ilyin/Main.java	(date 1590735782417)
@@ -1,14 +1,17 @@
 package by.bsu.ilyin;
 
-import org.springframework.boot.SpringApplication;
-import org.springframework.boot.autoconfigure.SpringBootApplication;
+import by.bsu.ilyin.UI.ConsoleUI;
+import by.bsu.ilyin.UI.UI;
+//import org.springframework.boot.SpringApplication;
+//import org.springframework.boot.autoconfigure.SpringBootApplication;
 
-@SpringBootApplication
+import java.sql.SQLException;
+
 public class Main {
-    public static void main(String[] args) {
-//        UI ui = new ConsoleUI();
-//        ui.start();
-        SpringApplication.run(Main.class, args);
+    public static void main(String[] args) throws Exception {
+        UI ui = new ConsoleUI();
+        ui.start();
+        //SpringApplication.run(Main.class, args);
     }
 }
 
Index: src/main/java/by/bsu/ilyin/dao/Controller.java
===================================================================
--- src/main/java/by/bsu/ilyin/dao/Controller.java	(revision df8503108d3daf8b1aac4db4ff6163e25dfbfaee)
+++ src/main/java/by/bsu/ilyin/dao/Controller.java	(revision df8503108d3daf8b1aac4db4ff6163e25dfbfaee)
@@ -1,149 +0,0 @@
-package by.bsu.ilyin.dao;
-
-import by.bsu.ilyin.dbc.DBC;
-import by.bsu.ilyin.entities.IdEntity;
-import by.bsu.ilyin.exceptions.ControllerException;
-import com.fasterxml.jackson.core.JsonProcessingException;
-import com.fasterxml.jackson.databind.ObjectMapper;
-import org.apache.logging.log4j.LogManager;
-import org.apache.logging.log4j.Logger;
-import org.json.JSONException;
-
-import java.io.IOException;
-import java.sql.Connection;
-import java.sql.SQLException;
-import java.sql.Statement;
-import java.util.List;
-import java.util.Objects;
-
-public abstract class Controller<E extends IdEntity,K> {
-
-    DBC dbc;
-    //Statement statement;
-    //Connection connection;
-    ObjectMapper mapper;
-    Database database;
-    Converter converter;
-    Logger logger = LogManager.getLogger();
-
-    public Controller() throws SQLException, ClassNotFoundException {
-        dbc = new DBC();
-    }
-
-    public abstract E[] getAll() throws IOException, SQLException, ClassNotFoundException, JSONException;
-    public abstract boolean updateDb(List<E> list);
-
-    public abstract List<E> getAllAsList() throws SQLException, ClassNotFoundException, JSONException, IOException;
-
-    public E getById(K id) throws Exception{
-        try {
-            E[] es = this.getAll();
-            for (E e : es) {
-                if (id.equals(e.getId())) return e;
-            }
-            throw new Exception("This entity doesn't exist!");
-        }
-        catch(Exception exception) {
-            logger.error(exception.getMessage());
-        }
-        return null;
-    }
-
-    public int findIndex(E e) throws IOException, SQLException, JSONException, ClassNotFoundException {
-        int index = -1;
-        for(int i=0;i<this.getAll().length;++i){
-            if(this.getAll()[i].getId()==e.getId()) { index = i; }
-        }
-        return index;
-    }
-
-    public int findIndexById(K id) throws IOException, SQLException, JSONException, ClassNotFoundException {
-        int index = -1;
-        for(int i=0;i<this.getAll().length;++i){
-            if(this.getAll()[i].getId().equals(id)) { index = i; }
-        }
-        return index;
-    }
-
-    public boolean delete(K id) throws IOException, SQLException, JSONException, ClassNotFoundException, ControllerException {
-        int index = findIndexById(id);
-        if(index>=0) {
-            List<E> list = this.getAllAsList();
-            list.remove(index);
-            updateDb(list);
-            logger.info("Entity was deleted");
-            return true;
-        }
-        logger.warn("Entity wasn't deleted");
-        return false;
-    }
-
-    public boolean delete(E entity) throws IOException, SQLException, JSONException, ClassNotFoundException, ControllerException {
-        return delete((K) entity.getId());
-    }
-
-    public boolean updateDb(E[]es)  {
-        try {
-            mapper.writeValue(database.getDb(), es);
-            return true;
-        } catch (IOException e) {
-            logger.error(e.getMessage());
-            return false;
-        }
-    }
-
-    public abstract boolean create(E entity) throws SQLException, ControllerException, ClassNotFoundException;
-//    {
-//        for(E e : this.getAll())
-//        {
-//            if(e.equals(entity)) {
-//                logger.warn("Entity having this ID already exists");
-//                return false;
-//            }
-//        }
-//        try {
-//            List<E>list = this.getAllAsList();
-//            if(Objects.isNull(entity.getId())) entity.setId(determineIdBeforeAdding(list));
-//            list.add(entity);
-//            updateDb(list);
-//        } catch (IOException e) {
-//            logger.error(e.getMessage());
-//        }
-//        logger.info("Entity was created");
-//        return true;
-//    }
-
-    public boolean update(E entity) throws Exception {
-        try {
-            int index = findIndex(entity);
-            E[] es = this.getAll();
-            if (index >= 0) {
-                if (es[index].equals(entity)) {
-                    logger.warn("Entity wasn't updated");
-                    return false;
-                }
-                es[index] = entity;
-                updateDb(es);
-                logger.info("Entity was updated");
-                return true;
-            }
-            throw new Exception("You cannot update not existing entity!");
-        }
-        catch(Exception e) {
-            logger.warn(e.getMessage());
-        }
-        return false;
-    }
-
-    public Integer determineIdBeforeAdding(List<E>list){
-        if(list.isEmpty()) return 1;
-        Integer max=list.get(0).getId();
-        for(E e : list){
-            if(e.getId()>max) max = e.getId();
-        }
-        return max+1;
-    }
-
-    public E getByName(String name){return null;}
-    public E getByEmail(String email){return null;}
-}
Index: .idea/shelf/Uncommitted_changes_before_Update_at_5_8_20,_15_29_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_5_8_20,_15_29_[Default_Changelist]/shelved.patch	(revision df8503108d3daf8b1aac4db4ff6163e25dfbfaee)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_5_8_20,_15_29_[Default_Changelist]/shelved.patch	(revision df8503108d3daf8b1aac4db4ff6163e25dfbfaee)
@@ -1,152 +0,0 @@
-Index: src/main/java/by/bsu/ilyin/Main.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package by.bsu.ilyin;\n\nimport by.bsu.ilyin.UI.ConsoleUI;\nimport by.bsu.ilyin.UI.UI;\nimport org.apache.logging.log4j.LogManager;\nimport org.apache.logging.log4j.Logger;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        UI ui = new ConsoleUI();\n        ui.start();\n\n    }\n}\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- src/main/java/by/bsu/ilyin/Main.java	(revision 5fde7b32a57240abb1f384fb807aea6b39f4ee5c)
-+++ src/main/java/by/bsu/ilyin/Main.java	(date 1588923393462)
-@@ -2,13 +2,16 @@
- 
- import by.bsu.ilyin.UI.ConsoleUI;
- import by.bsu.ilyin.UI.UI;
-+import by.bsu.ilyin.dao.Converter;
-+import by.bsu.ilyin.dao.UserConverter;
-+import by.bsu.ilyin.entities.User;
- import org.apache.logging.log4j.LogManager;
- import org.apache.logging.log4j.Logger;
-+import org.json.JSONArray;
- 
- public class Main {
-     public static void main(String[] args) throws Exception {
-         UI ui = new ConsoleUI();
-         ui.start();
--
-     }
- }
-Index: src/main/java/by/bsu/ilyin/entities/recipe/Product.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package by.bsu.ilyin.entities.recipe;\n\nimport by.bsu.ilyin.entities.IdEntity;\n\nimport java.util.StringJoiner;\n\npublic class Product extends IdEntity {\n\n    private String name;\n    private String type = \"\";\n    private int calorificValue;\n\n    public Product(){super();}\n\n    public Product(String name, int calorificValue) {\n        this.name = name;\n        this.calorificValue = calorificValue;\n    }\n\n    public Product(String name, String type, int calorificValue) {\n        this.name = name;\n        this.type = type;\n        this.calorificValue = calorificValue;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getType() {\n        return type;\n    }\n\n    public void setType(String type) {\n        this.type = type;\n    }\n\n    public int getCalorificValue() {\n        return calorificValue;\n    }\n\n    public void setCalorificValue(int calorificValue) {\n        this.calorificValue = calorificValue;\n    }\n\n    @Override\n    public String toString() {\n        return new StringJoiner(\", \", Product.class.getSimpleName() + \"[\", \"]\")\n                .add(\"name='\" + name + \"'\")\n                .add(\"type='\" + type + \"'\")\n                .toString();\n    }\n}\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- src/main/java/by/bsu/ilyin/entities/recipe/Product.java	(revision 5fde7b32a57240abb1f384fb807aea6b39f4ee5c)
-+++ src/main/java/by/bsu/ilyin/entities/recipe/Product.java	(date 1588925280308)
-@@ -5,9 +5,8 @@
- import java.util.StringJoiner;
- 
- public class Product extends IdEntity {
--
-     private String name;
--    private String type = "";
-+    private String type = " ";
-     private int calorificValue;
- 
-     public Product(){super();}
-@@ -47,6 +46,10 @@
-         this.calorificValue = calorificValue;
-     }
- 
-+    public String getFullName(){
-+        return name+" "+type;
-+    }
-+
-     @Override
-     public String toString() {
-         return new StringJoiner(", ", Product.class.getSimpleName() + "[", "]")
-Index: src/main/java/by/bsu/ilyin/dao/Converter.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package by.bsu.ilyin.dao;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.logging.log4j.LogManager;\nimport org.apache.logging.log4j.Logger;\n\nimport java.io.DataInputStream;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.List;\n\npublic abstract class Converter<Type> {\n\n    ObjectMapper objectMapper = new ObjectMapper();\n    Logger logger = LogManager.getLogger();\n\n    public abstract List<Type> fromJSONToList(String JSONString) throws JsonProcessingException;\n\n    public  List<Type> fromJSONFileToList(File JSONFile) throws IOException{\n        return fromJSONToList(fromJSONFileToJSONString(JSONFile));\n    };\n\n    public String fromJSONFileToJSONString(File JSONFile) throws IOException {\n        try {\n            DataInputStream dataInputStream = new DataInputStream(new FileInputStream(JSONFile));\n            byte[] dataInBytes = new byte[dataInputStream.available()];\n            dataInputStream.readFully(dataInBytes);\n            dataInputStream.close();\n            return new String(dataInBytes, 0, dataInBytes.length);\n        }\n        catch(IOException e){\n            logger.error(e.getMessage());\n        }\n        return null;\n    }\n}\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- src/main/java/by/bsu/ilyin/dao/Converter.java	(revision 5fde7b32a57240abb1f384fb807aea6b39f4ee5c)
-+++ src/main/java/by/bsu/ilyin/dao/Converter.java	(date 1588939460734)
-@@ -2,6 +2,7 @@
- 
- import com.fasterxml.jackson.core.JsonProcessingException;
- import com.fasterxml.jackson.databind.ObjectMapper;
-+import com.sun.tools.internal.xjc.Driver;
- import org.apache.logging.log4j.LogManager;
- import org.apache.logging.log4j.Logger;
- 
-@@ -9,7 +10,12 @@
- import java.io.File;
- import java.io.FileInputStream;
- import java.io.IOException;
-+import java.sql.Connection;
-+import java.sql.DriverManager;
-+import java.sql.SQLException;
-+import java.sql.Statement;
- import java.util.List;
-+import java.util.Properties;
- 
- public abstract class Converter<Type> {
- 
-Index: .idea/libraries/ojdbc8dms_19_3_0_0.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- .idea/libraries/ojdbc8dms_19_3_0_0.xml	(date 1588922958970)
-+++ .idea/libraries/ojdbc8dms_19_3_0_0.xml	(date 1588922958970)
-@@ -0,0 +1,9 @@
-+<component name="libraryTable">
-+  <library name="ojdbc8dms-19.3.0.0">
-+    <CLASSES>
-+      <root url="jar://$PROJECT_DIR$/lib/ojdbc8dms-19.3.0.0.jar!/" />
-+    </CLASSES>
-+    <JAVADOC />
-+    <SOURCES />
-+  </library>
-+</component>
-\ No newline at end of file
-Index: YouRecipe.iml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule=\"true\" type=\"JAVA_MODULE\" version=\"4\">\n  <component name=\"NewModuleRootManager\" LANGUAGE_LEVEL=\"JDK_1_8\">\n    <output url=\"file://$MODULE_DIR$/target/classes\" />\n    <output-test url=\"file://$MODULE_DIR$/target/test-classes\" />\n    <content url=\"file://$MODULE_DIR$\">\n      <sourceFolder url=\"file://$MODULE_DIR$/src/main/java\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/src/main/resources\" type=\"java-resource\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/src/test/java\" isTestSource=\"true\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/target\" />\n    </content>\n    <orderEntry type=\"inheritedJdk\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n    <orderEntry type=\"library\" name=\"org.json-chargebee-1.0\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"jackson-annotations-2.10.3\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"commons-lang3-3.9\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"log4j-api-2.8.2\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"log4j-core-2.8.2\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.apache.logging.log4j:log4j-core:2.13.2\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.apache.logging.log4j:log4j-api:2.13.2\" level=\"project\" />\n  </component>\n</module>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- YouRecipe.iml	(revision 5fde7b32a57240abb1f384fb807aea6b39f4ee5c)
-+++ YouRecipe.iml	(date 1588922958941)
-@@ -18,5 +18,6 @@
-     <orderEntry type="library" name="log4j-core-2.8.2" level="project" />
-     <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-core:2.13.2" level="project" />
-     <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.13.2" level="project" />
-+    <orderEntry type="library" name="ojdbc8dms-19.3.0.0" level="project" />
-   </component>
- </module>
-\ No newline at end of file
-Index: pom.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>groupId</groupId>\n    <artifactId>YouRecipe</artifactId>\n    <version>1.0-SNAPSHOT</version>\n\n    <properties>\n        <maven.compiler.source>1.8</maven.compiler.source>\n        <maven.compiler.target>1.8</maven.compiler.target>\n    </properties>\n\n\n    <dependencies>\n        <dependency>\n            <groupId>org.apache.logging.log4j</groupId>\n            <artifactId>log4j-core</artifactId>\n            <version>2.13.2</version>\n        </dependency>\n    </dependencies>\n    \n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- pom.xml	(revision 5fde7b32a57240abb1f384fb807aea6b39f4ee5c)
-+++ pom.xml	(date 1588920032450)
-@@ -21,5 +21,18 @@
-             <version>2.13.2</version>
-         </dependency>
-     </dependencies>
-+
-+    <dependency>
-+        <groupId>org.projectlombok</groupId>
-+        <artifactId>lombok</artifactId>
-+        <version>1.18.12</version>
-+        <scope>provided</scope>
-+    </dependency>
-+
-+    <dependency>
-+        <groupId>com.googlecode.json-simple</groupId>
-+        <artifactId>json-simple</artifactId>
-+        <version>1.1.1</version>
-+    </dependency>
-     
- </project>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_5_8_20__15_29__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_5_8_20__15_29__Default_Changelist_.xml	(revision df8503108d3daf8b1aac4db4ff6163e25dfbfaee)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_5_8_20__15_29__Default_Changelist_.xml	(revision df8503108d3daf8b1aac4db4ff6163e25dfbfaee)
@@ -1,24 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_5_8_20,_15_29_[Default_Changelist]" date="1588940970761" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_8_20,_15_29_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 5/8/20, 15:29 [Default Changelist]" />
-  <binary>
-    <option name="BEFORE_PATH" value="target/classes/by/bsu/ilyin/entities/recipe/Product.class" />
-    <option name="AFTER_PATH" value="target/classes/by/bsu/ilyin/entities/recipe/Product.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_8_20,_15_29_[Default_Changelist]/Product.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" />
-    <option name="AFTER_PATH" value="lib/ojdbc8dms-19.3.0.0.jar" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_8_20,_15_29_[Default_Changelist]/ojdbc8dms-19.3.0.0.jar" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="target/classes/by/bsu/ilyin/Main.class" />
-    <option name="AFTER_PATH" value="target/classes/by/bsu/ilyin/Main.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_8_20,_15_29_[Default_Changelist]/Main.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="target/classes/by/bsu/ilyin/dao/Converter.class" />
-    <option name="AFTER_PATH" value="target/classes/by/bsu/ilyin/dao/Converter.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_8_20,_15_29_[Default_Changelist]/Converter.class" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: .idea/sqldialects.xml
===================================================================
--- .idea/sqldialects.xml	(revision df8503108d3daf8b1aac4db4ff6163e25dfbfaee)
+++ .idea/sqldialects.xml	(revision df8503108d3daf8b1aac4db4ff6163e25dfbfaee)
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="SqlDialectMappings">
-    <file url="file://$PROJECT_DIR$/src/main/java/by/bsu/ilyin/dao/UserController.java" dialect="GenericSQL" />
-  </component>
-</project>
\ No newline at end of file
Index: .idea/dataSources.local.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"dataSourceStorageLocal\">\r\n    <data-source name=\"Oracle - @localhost\" uuid=\"b65fb65f-0521-4d74-8662-501edc7771c9\">\r\n      <database-info product=\"\" version=\"\" jdbc-version=\"\" driver-name=\"\" driver-version=\"\" dbms=\"ORACLE\" exact-version=\"0\" />\r\n      <secret-storage>forget</secret-storage>\r\n      <schema-mapping />\r\n    </data-source>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/dataSources.local.xml	(revision df8503108d3daf8b1aac4db4ff6163e25dfbfaee)
+++ .idea/dataSources.local.xml	(date 1590735794749)
@@ -2,8 +2,13 @@
 <project version="4">
   <component name="dataSourceStorageLocal">
     <data-source name="Oracle - @localhost" uuid="b65fb65f-0521-4d74-8662-501edc7771c9">
-      <database-info product="" version="" jdbc-version="" driver-name="" driver-version="" dbms="ORACLE" exact-version="0" />
-      <secret-storage>forget</secret-storage>
+      <database-info product="Oracle" version="Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production" jdbc-version="4.2" driver-name="Oracle JDBC driver" driver-version="12.2.0.1.0" dbms="ORACLE" exact-version="19.0.0.0.0" exact-driver-version="12.2">
+        <extra-name-characters>$#</extra-name-characters>
+        <identifier-quote-string>&quot;</identifier-quote-string>
+      </database-info>
+      <case-sensitivity plain-identifiers="upper" quoted-identifiers="exact" />
+      <secret-storage>master_key</secret-storage>
+      <user-name>c##yourecipe</user-name>
       <schema-mapping />
     </data-source>
   </component>
